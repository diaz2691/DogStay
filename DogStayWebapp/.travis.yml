# # Required to run your project under the correct environment.
# language: php

# # Versions of PHP you want your project run with.
# php:
  # - 5.3
  # - 5.4
 

 # before_install:
  # - sudo php /home/travis/.phpenv/versions/5.3/bin/composer self-update
  # - sudo php /home/travis/.phpenv/versions/5.4.25/bin/composer.phar self-update
  
# # /*
# # # Commands to be run before your environment runs.
# before_script:
  # - composer install --prefer-source --no-interaction --dev
   # - sudo apt-get install apache2 libapache2-mod-fastcgi
   # # enable php-fpm
   # - sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
   # - sudo a2enmod rewrite actions fastcgi alias
   # - echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
   # - ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
   # # configure apache virtual hosts
   # - sudo cp -f build/travis-ci-apache /etc/apache2/sites-available/default
   # - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/default
   # - sudo service apache2 restart
# sudo: required
# # # Commands you want to run that will verify your build.
# # script: phpunit

# # # allow_failures: Allow this build to fail under the specified environments.
# # # fast_finish: If your build fails do not continue trying to build, just stop.
# # matrix:
  # # allow_failures:
    # # - php: 5.6
    # # - php: hhvm
  # # fast_finish: true

# # # Customize when the notification emails are sent.
# # notifications:
    # # on_success: never
    # # on_failure: always
# # */
# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # using major version aliases

  # aliased to 5.2.17
  - 5.2
  # aliased to a recent 5.3.x version
  - 5.3
  # aliased to a recent 5.4.x version
  - 5.4
  # aliased to a recent 5.5.x version
  - 5.5

# optionally specify a list of environments, for example to test different RDBMS


# execute any number of scripts before the test run, custom env's are available as variables

# omitting "script:" will default to phpunit
# use the $DB env variable to determine the phpunit.xml to use
script: phpunit --configuration phpunit_$DB.xml --coverage-text
